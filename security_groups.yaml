heat_template_version: 2016-04-08

parameters:
  control_plane_ports:
    type: comma_delimited_list
    description: ports to open for external access to haproxy servers
    default: "8443"
  data_plane_ports:
    type: comma_delimited_list
    description: ports to open for external access to haproxy servers
    default: "80,443"

resources:
  bastion_egress_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: bastion_egress_sg
      rules:
        - direction: egress
          ethertype: IPv4

  masters_egress_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: masters_egress_sg
      rules:
        - direction: egress
          ethertype: IPv4

  nodes_egress_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: nodes_egress_sg
      rules:
        - direction: egress
          ethertype: IPv4

  all_egress_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: all_egress_sg
      rules:
        - direction: egress
          ethertype: IPv4

  bastion_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: bastion_sg
      rules:
        - direction: ingress
          remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22

  cluster_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: clusterwide_sg
      rules:
        - direction: egress
          ethertype: IPv4
        - direction: ingress
          ethertype: IPv4
          remote_ip_prefix: 10.2.1.101/32
          protocol: tcp
          port_range_min: 22
          port_range_max: 22

  control_plane_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: controlplane_sg
      rules:
        repeat:
          for_each:
            <%port%>: { get_param: control_plane_ports }
          template:
            protocol: tcp
            direction: ingress
            port_range_min: <%port%>
            port_range_max: <%port%>

  data_plane_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: dataplane_sg
      rules:
        repeat:
          for_each:
            <%port%>: { get_param: data_plane_ports }
          template:
            protocol: tcp
            direction: ingress
            port_range_min: <%port%>
            port_range_max: <%port%>

  nodes_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: nodes_sg
      rules:
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_group_id
          remote_group_id: { get_resource: masters_egress_secgroup }
          protocol: tcp
          port_range_min: 10250
          port_range_max: 10250
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_group_id
          remote_group_id: { get_resource: all_egress_secgroup }
          protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_group_id
          remote_group_id: { get_resource: all_egress_secgroup }
          protocol: tcp
          port_range_min: 443
          port_range_max: 443
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_group_id
          protocol: udp
          port_range_min: 4789
          port_range_max: 4789

  dns_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: dns_sg
      rules:
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_group_id
          remote_group_id: { get_resource: all_egress_secgroup }
          protocol: tcp
          port_range_min: 53
          port_range_max: 53
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_group_id
          remote_group_id: { get_resource: all_egress_secgroup }
          protocol: udp
          port_range_min: 53
          port_range_max: 53


  masters_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: masters_sg
      rules:
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_group_id
          remote_group_id: { get_resource: all_egress_secgroup }
          protocol: tcp
          port_range_min: 8443
          port_range_max: 8443
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_group_id
          remote_group_id: { get_resource: nodes_egress_secgroup }
          protocol: tcp
          port_range_min: 8053
          port_range_max: 8053
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_group_id
          remote_group_id: { get_resource: nodes_egress_secgroup }
          protocol: udp
          port_range_min: 8053
          port_range_max: 8053
        - direction: ingress
          ethertype: IPv4
          remote_mode: remote_group_id
          protocol: tcp
          port_range_min: 2379
          port_range_max: 2380

outputs:
  bastion_egress_security_group:
    description: Cluster wide security group
    value: { get_resource: bastion_egress_secgroup }
  bastion_security_group:
    description: Cluster wide security group
    value: { get_resource: bastion_secgroup }
  all_egress_security_group:
    description: Cluster wide security group
    value: { get_resource: all_egress_secgroup }
  cluster_security_group:
    description: Cluster wide security group
    value: { get_resource: cluster_secgroup }
  masters_security_group:
    description: Masters security group
    value: { get_resource: masters_secgroup }
  masters_egress_security_group:
    description: Masters egress security group
    value: { get_resource: masters_egress_secgroup }
  nodes_security_group:
    description: Nodes security group
    value: { get_resource: nodes_secgroup }
  nodes_egress_security_group:
    description: Masters egress security group
    value: { get_resource: nodes_egress_secgroup }
  dns_security_group:
    description: DNS security group
    value: { get_resource: dns_secgroup }
  control_plane_security_group:
    description: Security group controlling access to the control plane
    value: { get_resource: control_plane_secgroup }
  data_plane_security_group:
    description: Security group controlling access to the data plane
    value: { get_resource: data_plane_secgroup }
