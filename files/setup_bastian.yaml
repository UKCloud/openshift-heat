---
- hosts: localhost
  vars:
    time: __time__
    haproxys: __haproxy_details__
    masters: __master_details__
    workers: __worker_details__
    haproxy_vip: __haproxy_vip__
    domainSuffix: __domain_suffix__
    localDomainSuffix: __local_domain_suffix__
    openstackOpenshiftPassword: __openshift_openstack_password__
    openstackOpenshiftUsername: __openshift_openstack_username__
    osAuthUrl: __openstack_auth_url__
    osTenantId: __openstack_tenant_id__
    osTenantName: __openstack_tenant_name__
    osRegion: __openstack_region__
    s3accesskey: __s3accesskey__
    s3secretkey: __s3secretkey__
    s3regionendpoint: __s3regionendpoint__
    s3bucketname: __s3bucketname__
    setupMonitoring: __setupMonitoring__
    openshiftVersion: __openshiftVersion__
    getCertificates: __getCertificates__
  tasks:
    - name: temporarily add host entries before we setup proper DNS
      blockinfile:
        dest: hosts.j2
        create: yes
        block: |
          127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
          ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
          {% for item in haproxys %}
          {{ item|replace('\"', "") }}
          {% endfor %}
          {% for item in masters %}
          {{ item|replace('\"', "") }}
          {% endfor %}
          {% for item in workers %}
          {{ item|replace('\"', "") }}
          {% endfor %}
          {{ haproxy_vip }} console.{{ domainSuffix }}
          {{ haproxy_vip }} ocp.{{ domainSuffix }}
    - name: update hosts file
      template: src=hosts.j2 dest=/etc/hosts
    - name: disable TTY for sudo on bastion
      lineinfile:
        path: /etc/sudoers
        regexp: '^Defaults.*requiretty$'
        line: '#Defaults    requiretty'
        backup: yes
      become: yes
      become_method: sudo
    - name: create ansible variables template
      blockinfile:
        dest: ansible_vars.j2
        create: yes
        block: |
          haproxy_details:
          {% for item in haproxys %}
            {{ item|replace(' ', ': ') }}
          {% endfor %}
          master_details:
          {% for item in masters %}
            {{ item|replace(' ', ': ') }}
          {% endfor %}
          worker_details:
          {% for item in workers %}
            {{ item|replace(' ', ': ') }}
          {% endfor %}
          haproxy_vip: {{ haproxy_vip }}
          domainSuffix: {{ domainSuffix }}
          openstackOpenshiftPassword: {{ openstackOpenshiftPassword }}
          openstackOpenshiftUsername: {{ openstackOpenshiftUsername }}
          osAuthUrl: {{ osAuthUrl }}
          osTenantId: {{ osTenantId }}
          osTenantName: {{ osTenantName }}
          osRegion: {{ osRegion }}
          s3accesskey: {{ s3accesskey }}
          s3secretkey: {{ s3secretkey  }} 
          s3regionendpoint: {{ s3regionendpoint }}
          s3bucketname: {{ s3bucketname }}
          localDomainSuffix: {{ localDomainSuffix }}
          setupMonitoring: {{ setupMonitoring }}
          openshiftVersion: {{ openshiftVersion }}
          getCertificates: {{ getCertificates }}
    - name: create ansible variables directory
      file:
        path: /etc/ansible/group_vars/
        state: directory
    - name: create ansible variables file
      file:
        path: /etc/ansible/group_vars/all.yml
        state: touch
    - name: place ansible vars file
      template: src=ansible_vars.j2 dest=/etc/ansible/group_vars/all.yml
    - name: Pull UKCloud openshift code
      git:
        repo: 'https://github.com/UKCloud/openshift-deployment-ansible.git'
        dest: /usr/share/ansible/openshift-deployment-ansible
    - name: Create variables symlink
      file:
        src: /etc/ansible/group_vars
        dest: /usr/share/ansible/openshift-deployment-ansible/group_vars
        owner: cloud-user
        group: cloud-user
        state: link
    - name: Update repo permissions
      file:
        path: /usr/share/ansible/openshift-deployment-ansible
        owner: cloud-user
        group: cloud-user
        recurse: yes
